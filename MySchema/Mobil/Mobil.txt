2)user's calls by date
CREATE PROCEDURE sp_CallsUserRangeDate(pid_user int(11),date_from  Date,date_to Date)
BEGIN

SELECT
number_origin as numberorigin,city_origin as cityorigin ,number_destination as numberdestination,city_destination as citydestination,duration,date_call as datecall, round(total_price,2) as totalprice
FROM vcalls vc
WHERE vc.id_user=pid_user  and date_call BETWEEN date_From and date_to + 1 ;

END$$


drop procedure if EXISTS sp_InvoicesUserRangeDate;
DELIMITER $$
CREATE PROCEDURE sp_InvoicesUserRangeDate(pid_user int(11),date_from  Date,date_to Date)
BEGIN
SELECT id_invoice,id_phone,id_user,cant_calls,cost_price, total_price,due_date,date_invoice
FROM vinvoices vi
WHERE vi.id_user=pid_user  and date_invoice BETWEEN date_From and date_to + 1 ;
END$$
DELIMITER ;

3) 10 destinations most called by a user
/*triggers to avoid join in top10 procedure*/
/*trigger Insert*/
DELIMITER $$
CREATE TRIGGER phone_BI before INSERT on phones for EACH ROW
Begin
DECLARE v_id_city int;
        SELECT c.id_city into v_id_city FROM cities c WHERE new.number like CONCAT(c.prefix,'%')order by length(c.prefix) desc limit 1;
 		if v_id_city is null then SIGNAL SQLSTATE '45000' set MESSAGE_TEXT="the prefix doesn´t exist";
      ELSE
      SET new.id_city = v_id_city;
      END IF;
        END$$
                        DELIMITER ;

/*trigger update*/
DELIMITER $$
CREATE TRIGGER phone_BU before UPDATE on phones for EACH ROW
Begin
DECLARE v_id_city int;
        SELECT c.id_city into v_id_city FROM cities c WHERE new.number like CONCAT(c.prefix,'%')order by length(c.prefix) desc limit 1;
 		if v_id_city is null then SIGNAL SQLSTATE '45000' set MESSAGE_TEXT="the prefix doesn´t exist";
      ELSE
      SET new.id_city = v_id_city;
      END IF;
        END$$
                        DELIMITER ;

   DELIMITER ;
/*SP  top 10*/

CREATE PROCEDURE SP_TP10CallofUser(id_user int(11))
BEGIN
SELECT ci.name as destination,count(id_call) as comunicationes from calls INNER JOIN phones on id_phone=calls.id_destination_phone INNER JOIN cities ci on ci.id_city=phones.id_city WHERE calls.id_user=id_user
GROUP by ci.id_city order by comunicationes DESC limit 10;
END$$
